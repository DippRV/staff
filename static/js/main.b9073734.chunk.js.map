{"version":3,"sources":["store/reducers/staffReducer.js","DAL/Staff.js","components/EmployeeForm/EmployeeFormConfig.js","components/form/InputElement.js","components/form/SelectElement.js","components/form/RadioGroupElement.js","components/form/CheckboxElement.js","components/StaffToolBar/DialogNewEmployee.js","components/StaffToolBar/StaffToolBar.js","components/StaffTable/StaffTableView.js","components/StaffTable/StaffTable.js","components/EmployeeForm/EmployeeFormView.js","components/EmployeeForm/EmployeeForm.js","components/StaffPage.js","App.js","store/index.js","index.js"],"names":["GET_STAFF","ADD_EMPLOYEE","DELETE_EMPLOYEE","UPDATE_EMPLOYEE","SELECT_EMPLOYEE","initialState","staff","selectedEmployee","GetStaffAC","type","SelectEmployeeAC","employee","staffReducer","state","action","filter","id","map","URL_STAFF","URL_EMPLOYEE","DAL_STAFF","Get","axios","get","then","resp","data","catch","Add","post","Delete","delete","Update","put","GetPositions","EmployeeSchema","Yup","shape","date","name","required","position","sex","fired","GetEmptyEmployeeData","InputElement","control","label","error","rest","render","field","onChange","value","TextField","message","SelectElement","positions","FormControl","InputLabel","Select","labelId","MenuItem","RadioGroupElement","options","FormLabel","RadioGroup","row","option","FormControlLabel","key","Radio","CheckboxElement","FormGroup","Checkbox","color","checked","labelPlacement","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","width","DialogNewEmployee","handleSubmit","onSubmit","errors","openForm","closeForm","sexOptions","classes","Dialog","open","onClose","DialogTitle","DialogContent","style","overflow","className","Grid","alignItems","container","item","sm","InputLabelProps","shrink","DialogActions","Button","onClick","button","StaffToolBar","useSelector","dispatch","useDispatch","useState","setOpenForm","formToggle","prev","useForm","defaultValues","EmployeeFormConfig","resolver","yupResolver","formState","reset","variant","disabled","a","DeleteEmployee","result","table","minWidth","StaffTableView","SelectEmployee","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","selected","scope","StaffTable","useEffect","e","console","log","EmployeeFormView","EmployeeForm","setValue","getValues","SetSelectEmployee","useCallback","paper","padding","palette","text","secondary","StaffPage","setPositions","xs","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b9073734.chunk.js","sourcesContent":["const GET_STAFF = \"GET_STAFF\";\r\nconst ADD_EMPLOYEE = \"ADD_EMPLOYEE\";\r\nconst DELETE_EMPLOYEE = \"DELETE_EMPLOYEE\";\r\nconst UPDATE_EMPLOYEE = \"UPDATE_EMPLOYEE\";\r\nconst SELECT_EMPLOYEE = \"SELECT_EMPLOYEE\";\r\n\r\n\r\nconst initialState = {\r\n    staff: [],\r\n    selectedEmployee:  null\r\n}\r\n\r\nconst staffReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_STAFF:\r\n            return {...state, staff: action.staff};\r\n        case ADD_EMPLOYEE:\r\n            return {...state, staff: [...state.staff, action.employee]};\r\n        case DELETE_EMPLOYEE:\r\n            return {...state, staff: state.staff.filter(employee => employee.id !== action.employee.id)};\r\n        case UPDATE_EMPLOYEE:\r\n            return {...state, staff: state.staff.map(employee => employee.id === action.employee.id ? action.employee : employee)};\r\n        case SELECT_EMPLOYEE:\r\n            if (!action.employee || (state.selectedEmployee && state.selectedEmployee.id === action.employee.id))\r\n                return {...state, selectedEmployee: null};\r\n            return {...state, selectedEmployee: action.employee};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const GetStaffAC = (staff) => {return {type: GET_STAFF, staff}};\r\nexport const AddEmployeeAC = (employee) => {return {type: ADD_EMPLOYEE, employee}};\r\nexport const DeleteEmployeeAC = (employee) => {return {type: DELETE_EMPLOYEE, employee}};\r\nexport const UpdateEmployeeAC = (employee) => {return {type: UPDATE_EMPLOYEE, employee}};\r\nexport const SelectEmployeeAC = (employee) => {return {type: SELECT_EMPLOYEE, employee}};\r\n\r\n\r\nexport default staffReducer;\r\n","import axios from \"axios\";\r\n\r\nconst URL_STAFF = 'https://my-json-server.typicode.com/DippRV/staff-db/staff';\r\nconst URL_STAFF_POSITIONS = 'https://my-json-server.typicode.com/DippRV/staff-db/positions'\r\n\r\nconst URL_EMPLOYEE = (employee) => {\r\n    return URL_STAFF + `/${employee.id}/`;\r\n}\r\n\r\nconst GetStaff = () => {\r\n    return axios.get(URL_STAFF).then(resp => resp.data)\r\n        .catch(() => null);\r\n}\r\n\r\nconst AddEmployee = (employee) => {\r\n    return axios.post(URL_STAFF, employee).then(resp => resp.data)\r\n        .catch(() => null);\r\n}\r\n\r\nconst DeleteEmployee = (employee) => {\r\n    return axios.delete(URL_EMPLOYEE(employee)).then(resp => resp.data)\r\n        .catch(() => null);\r\n}\r\n\r\nconst UpdateEmployee = (employee) => {\r\n    return axios.put(URL_EMPLOYEE(employee), employee).then(resp => resp.data)\r\n        .catch(() => null);\r\n}\r\n\r\nconst GetPositions = () => {\r\n    return axios.get(URL_STAFF_POSITIONS).then(resp => resp.data)\r\n        .catch(() => null);\r\n}\r\n\r\nconst DAL_STAFF = {\r\n    Get: GetStaff,\r\n    Add: AddEmployee,\r\n    Delete: DeleteEmployee,\r\n    Update: UpdateEmployee,\r\n    GetPositions: GetPositions\r\n};\r\n\r\nexport default DAL_STAFF;","import * as Yup from 'yup'\r\n\r\nconst EmployeeSchema = Yup.object().shape({\r\n    id: Yup.number(),\r\n    date: Yup.string(),\r\n    name: Yup.string().required('Required'),\r\n    position: Yup.string().required('Required'),\r\n    sex: Yup.string(),\r\n    fired: Yup.bool()\r\n});\r\n\r\nconst GetEmptyEmployeeData = () => {\r\n    return {\r\n        id: 0,\r\n        name: \"\",\r\n        date: \"\",\r\n        position: \"\",\r\n        sex: \"\",\r\n        fired: false\r\n    };\r\n}\r\n\r\nexport default {EmployeeSchema, GetEmptyEmployeeData};","import {Controller} from \"react-hook-form\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\n\r\nconst InputElement = ({control, name, label, error = null, ...rest}) => {\r\n    return (\r\n        <>\r\n            <Controller name={name} control={control} render={({field: {onChange, value}}) => {\r\n                return (\r\n                    <TextField id={name} label={label} onChange={onChange} value={value} {...rest}/>\r\n                )\r\n            }}/>\r\n            {error? <p>{error.message}</p> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputElement;\r\n","import {Controller} from \"react-hook-form\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport React from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst SelectElement = ({control, name, label, error = null, positions, ...rest}) => {\r\n    return (\r\n        <FormControl>\r\n            <InputLabel id={label}>{label}</InputLabel>\r\n            <Controller control={control} name={name} render={({field: {onChange, value}}) => {\r\n                return (\r\n                    <Select\r\n                        labelId={label}\r\n                        id={name}\r\n                        onChange={onChange}\r\n                        value={value}\r\n                        {...rest}\r\n                    >\r\n                        <MenuItem value=\"\">Select {name}</MenuItem>\r\n                        {positions?.map(position => {\r\n                            return (\r\n                                <MenuItem key={position} value={position}>{position}</MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                );\r\n            }}/>\r\n            {error? <p>{error.message}</p> : null}\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default SelectElement;","import FormLabel from \"@material-ui/core/FormLabel\";\r\nimport {Controller} from \"react-hook-form\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport React from \"react\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nconst RadioGroupElement = ({label, control, name, options}) => {\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>{label}</FormLabel>\r\n            <Controller control={control} name={name} render={({field: {onChange, value}}) => {\r\n                return (\r\n                    <RadioGroup row onChange={onChange} value={value}>\r\n                        {options?.map((option) => {\r\n                            return (\r\n                                <FormControlLabel key={option.key} value={option.value} label={option.key} control={<Radio />} />\r\n                            )\r\n                        })}\r\n                    </RadioGroup>\r\n                );\r\n            }}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default RadioGroupElement;","import FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {Controller} from \"react-hook-form\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport React from \"react\";\r\n\r\nconst CheckboxElement = ({control, name, label}) => {\r\n    return (\r\n        <FormControl>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Controller name={name} control={control} render={({field: {onChange, value}}) => {\r\n                            return (\r\n                                <Checkbox color=\"primary\" onChange={onChange} checked={value}/>\r\n                            )\r\n                        }}/>\r\n                    }\r\n                    label={label}\r\n                    labelPlacement=\"start\"\r\n                />\r\n            </FormGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CheckboxElement;","import DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport {Button, Grid} from \"@material-ui/core\";\r\nimport InputElement from \"../form/InputElement\";\r\nimport SelectElement from \"../form/SelectElement\";\r\nimport RadioGroupElement from \"../form/RadioGroupElement\";\r\nimport CheckboxElement from \"../form/CheckboxElement\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport React, {useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        '& .MuiFormControl-root': {\r\n            margin: theme.spacing(1),\r\n            width: '100%'\r\n        }\r\n    }\r\n}));\r\n\r\nconst DialogNewEmployee = ({control, handleSubmit, onSubmit, errors, openForm, closeForm, sexOptions, positions}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Dialog open={openForm} onClose={closeForm} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">New employee</DialogTitle>\r\n            <DialogContent style={{overflow: 'hidden'}} className={classes.root} >\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid alignItems={'flex-end'} container item={true} sm={12} spacing={3}>\r\n                        <Grid item sm={6} >\r\n                            <InputElement error={errors.name} label=\"ФИО\" name=\"name\" control={control} />\r\n                        </Grid>\r\n                        <Grid item sm={6} >\r\n                            <InputElement label=\"Дата рождения\" name=\"date\" type=\"date\" control={control} InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                        </Grid>\r\n                        <Grid item sm={12} >\r\n                            <SelectElement error={errors.position} control={control} name=\"position\" label=\"Должность\" positions={positions}/>\r\n                        </Grid>\r\n                        <Grid item sm={6}>\r\n                            <RadioGroupElement control={control} label=\"Пол\" name=\"sex\" options={sexOptions}/>\r\n                        </Grid>\r\n                        <Grid item sm={2}>\r\n                            <CheckboxElement control={control} label=\"Уволен\" name=\"fired\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <DialogActions>\r\n                        <Button onClick={closeForm} color=\"primary\">Закрыть</Button>\r\n                        <Button color='primary' type=\"submit\">Добавить</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default DialogNewEmployee;","import {Button, Grid} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {AddEmployeeAC, DeleteEmployeeAC, SelectEmployeeAC} from \"../../store/reducers/staffReducer\";\r\nimport DAL_STAFF from \"../../DAL/Staff\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport EmployeeFormConfig from \"../EmployeeForm/EmployeeFormConfig\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport DialogNewEmployee from \"./DialogNewEmployee\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: '5px'\r\n    }\r\n}));\r\n\r\nconst StaffToolBar = ({positions, sexOptions}) => {\r\n    const classes = useStyles();\r\n    const selectedEmployee = useSelector(state => state.staff.selectedEmployee);\r\n    const dispatch = useDispatch();\r\n    const [openForm, setOpenForm] = useState(false);\r\n    const DeleteEmployee = (selectedEmployee) => {\r\n        return (dispatch) => {\r\n            (async () => {\r\n                let result = await DAL_STAFF.Delete(selectedEmployee);\r\n                if (result) {\r\n                    dispatch(DeleteEmployeeAC(selectedEmployee));\r\n                    dispatch(SelectEmployeeAC(null));\r\n                }\r\n            })();\r\n\r\n        }\r\n    }\r\n\r\n    const formToggle = () => {\r\n        setOpenForm(prev => !prev);\r\n    }\r\n\r\n    const closeForm = () => {\r\n        reset();\r\n        formToggle();\r\n    }\r\n\r\n    const {handleSubmit, control, formState:{errors}, reset} = useForm({\r\n        defaultValues: EmployeeFormConfig.GetEmptyEmployeeData(),\r\n        resolver: yupResolver(EmployeeFormConfig.EmployeeSchema)\r\n    });\r\n    const onSubmit = (data) => {\r\n        (async () => {\r\n            let result = await DAL_STAFF.Add(data);\r\n            if (result) {\r\n                dispatch(AddEmployeeAC(result));\r\n                reset();\r\n            }\r\n        })();\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Grid container item={true} sm={12} spacing={3}>\r\n                <Button className={classes.button} variant='contained' color='primary' onClick={formToggle}>Добавить</Button>\r\n                <Button className={classes.button} variant='contained' color-='primary' disabled={selectedEmployee? false : true} onClick={() => {dispatch(DeleteEmployee(selectedEmployee))}}>Удалить</Button>\r\n            </Grid>\r\n            <DialogNewEmployee control={control} errors={errors} sexOptions={sexOptions}\r\n                               handleSubmit={handleSubmit} onSubmit={onSubmit} positions={positions}\r\n                               closeForm={closeForm} openForm={openForm}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StaffToolBar;","import Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650\r\n    }\r\n}));\r\n\r\nconst StaffTableView = ({staff, selectedEmployee, SelectEmployee}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer component={Paper} >\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ФИО</TableCell>\r\n                        <TableCell align=\"right\">Дата рождения</TableCell>\r\n                        <TableCell align=\"right\">Пол</TableCell>\r\n                        <TableCell align=\"right\">Уволен</TableCell>\r\n                        <TableCell align=\"right\">Должность</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {staff ? staff.map((employee) => (\r\n                        <TableRow key={employee.id} selected={selectedEmployee && selectedEmployee.id === employee.id} onClick={SelectEmployee(employee)}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {employee.name}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{employee.date}</TableCell>\r\n                            <TableCell align=\"right\">{employee.sex}</TableCell>\r\n                            <TableCell align=\"right\">{employee.fired ? 'Да' : 'Нет'}</TableCell>\r\n                            <TableCell align=\"right\">{employee.position}</TableCell>\r\n                        </TableRow>\r\n                    )) : null}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport default StaffTableView;","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GetStaffAC, SelectEmployeeAC} from \"../../store/reducers/staffReducer\";\r\nimport DAL_STAFF from \"../../DAL/Staff\";\r\nimport StaffTableView from \"./StaffTableView\";\r\n\r\nconst StaffTable = () => {\r\n\r\n    const {staff, selectedEmployee} = useSelector(state => state.staff);\r\n    const dispatch = useDispatch();\r\n\r\n    const GetStaff = () => {\r\n        return (dispatch) => {\r\n            (async () => {\r\n                dispatch(GetStaffAC(await DAL_STAFF.Get()));\r\n            })();\r\n        }\r\n    }\r\n\r\n    const SelectEmployee = (employee) => {\r\n        return () => {\r\n            dispatch(SelectEmployeeAC(employee));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n            dispatch(GetStaff());\r\n        }\r\n        catch (e) {\r\n            console.log('Server Error');\r\n        }\r\n\r\n    },[dispatch])\r\n\r\n    return (\r\n        <StaffTableView staff={staff} selectedEmployee={selectedEmployee} SelectEmployee={SelectEmployee}/>\r\n    );\r\n}\r\n\r\nexport default StaffTable;\r\n","import {Button, Grid} from \"@material-ui/core\";\r\nimport InputElement from \"../form/InputElement\";\r\nimport SelectElement from \"../form/SelectElement\";\r\nimport RadioGroupElement from \"../form/RadioGroupElement\";\r\nimport CheckboxElement from \"../form/CheckboxElement\";\r\nimport React from \"react\";\r\n\r\nconst EmployeeFormView = ({control, positions, sexOptions, selectedEmployee, errors, handleSubmit, onSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid alignItems={'flex-end'} container item={true} sm={12} spacing={3}>\r\n                <Grid item sm={6} >\r\n                    <InputElement error={errors.name} label=\"ФИО\" name=\"name\" control={control} />\r\n                </Grid>\r\n                <Grid item sm={6} >\r\n                    <InputElement label=\"Дата рождения\" name=\"date\" type=\"date\" control={control} InputLabelProps={{\r\n                        shrink: true,\r\n                    }} />\r\n                </Grid>\r\n                <Grid item sm={12} >\r\n                    <SelectElement error={errors.position} control={control} name=\"position\" label=\"Должность\" positions={positions}/>\r\n                </Grid>\r\n                <Grid item sm={6}>\r\n                    <RadioGroupElement control={control} label=\"Пол\" name=\"sex\" options={sexOptions}/>\r\n                </Grid>\r\n                <Grid item sm={2}>\r\n                    <CheckboxElement control={control} label=\"Уволен\" name=\"fired\"/>\r\n                </Grid>\r\n                <Grid item sm={12} >\r\n                    <Button variant='contained' color='primary' type=\"submit\" disabled={selectedEmployee? false : true}>Изменить</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EmployeeFormView;","import React, {useEffect, useCallback} from \"react\";\r\nimport {useForm} from 'react-hook-form';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport EmployeeFormConfig from \"./EmployeeFormConfig\";\r\nimport DAL_STAFF from \"../../DAL/Staff\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport {UpdateEmployeeAC} from \"../../store/reducers/staffReducer\";\r\nimport EmployeeFormView from \"./EmployeeFormView\";\r\n\r\nconst EmployeeForm = ({positions, sexOptions}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedEmployee = useSelector(state => state.staff.selectedEmployee);\r\n\r\n    const {handleSubmit, setValue, getValues, control, formState:{errors}} = useForm({\r\n        defaultValues: EmployeeFormConfig.GetEmptyEmployeeData(),\r\n        resolver: yupResolver(EmployeeFormConfig.EmployeeSchema)\r\n    });\r\n    const onSubmit = (data) => {\r\n        (async () => {\r\n            let result = await DAL_STAFF.Update(data);\r\n            if (result) {\r\n                dispatch(UpdateEmployeeAC(result));\r\n            }\r\n        })();\r\n    }\r\n    const SetSelectEmployee = useCallback((selectedEmployee) => {\r\n        setValue(\"id\", selectedEmployee.id);\r\n        setValue(\"name\", selectedEmployee.name);\r\n        setValue(\"date\", selectedEmployee.date);\r\n        setValue(\"position\", selectedEmployee.position);\r\n        setValue(\"sex\", selectedEmployee.sex);\r\n        setValue(\"fired\", selectedEmployee.fired);\r\n    }, [setValue]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (selectedEmployee)\r\n                await SetSelectEmployee(selectedEmployee);\r\n            else\r\n                await SetSelectEmployee(EmployeeFormConfig.GetEmptyEmployeeData());\r\n        })();\r\n\r\n    }, [selectedEmployee, setValue, SetSelectEmployee, getValues]);\r\n\r\n    return (\r\n        <EmployeeFormView control={control} onSubmit={onSubmit} handleSubmit={handleSubmit} errors={errors}\r\n                          sexOptions={sexOptions} positions={positions} selectedEmployee={selectedEmployee}\r\n        />\r\n    );\r\n}\r\n\r\nexport default EmployeeForm;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport StaffToolBar from \"./StaffToolBar/StaffToolBar\";\r\nimport StaffTable from \"./StaffTable/StaffTable\";\r\nimport EmployeeForm from \"./EmployeeForm/EmployeeForm\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport DAL_STAFF from \"../DAL/Staff\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        '& .MuiFormControl-root': {\r\n            margin: theme.spacing(1),\r\n            width: '100%'\r\n        }\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nconst sexOptions = [\r\n    {key: \"Женский\", value: \"female\"},\r\n    {key: \"Мужской\", value: \"male\"}\r\n]\r\n\r\nconst StaffPage = () => {\r\n    const classes = useStyles();\r\n\r\n    let [positions, setPositions ]  = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            let result = await DAL_STAFF.GetPositions();\r\n            if (result) {\r\n                setPositions(prev => result);\r\n            }\r\n        })();\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <StaffToolBar positions={positions} sexOptions={sexOptions}>\r\n                        </StaffToolBar>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item sm={6}>\r\n                    <StaffTable>\r\n                    </StaffTable>\r\n                </Grid>\r\n                <Grid container item={true} sm={6}>\r\n                    <Paper className={classes.paper}>\r\n                        <EmployeeForm positions={positions} sexOptions={sexOptions}>\r\n                        </EmployeeForm>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StaffPage;","import React from 'react'\r\nimport StaffPage from \"./components/StaffPage\";\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <StaffPage></StaffPage>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport staffReducer from \"./reducers/staffReducer\";\r\n\r\nconst rootReducer = combineReducers({staff: staffReducer})\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux'\r\nimport {store} from './store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}